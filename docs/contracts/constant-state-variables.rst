.. index:: ! constant

************************
Constant State Variables
************************

状態変数は ``constant`` として宣言することができます。この場合、コンパイル時に定数となる式で値が割り当てされている必要があります。ストレージ、ブロックチェーンデータ (例: ``now``、``address(this).balance``、``block.number``)、
実行データ (``msg.value``、``gasleft()``) にアクセスする式、もしくは外部のコントラクトを呼び出す式は使えません。メモリ位置の変更に影響があるかもしれない式は使えますが、メモリのオブジェクトに影響があるかもしれない式は使えません。組み込みファンクションの ``keccak256``、``sha256``、``ripemd160``、``ecrecover``、``addmod``、``mulmod`` は使用可能です（ ``keccak256`` の例外は外部コントラクトを呼び出しますが）。

メモリ位置への影響を許容する理由としては、lookup-tablesの様な複雑なオブジェクトの作成が可能であるべきだからです。
ただ、この機能はまだ完全に使用可能というわけではありません。

コンパイラはこの変数のためのストレージスロットを保持しません。結果は全て各定数式で置き換えられます（オプティマイザによって1つの値に計算されるかもしれません）。

全ての型の定数がここで実行される訳ではありません。値型と文字列だけサポートされています。

::

    pragma solidity >=0.4.0 <0.6.0;

    contract C {
        uint constant x = 32**22 + 8;
        string constant text = "abc";
        bytes32 constant myHash = keccak256("abc");
    }
